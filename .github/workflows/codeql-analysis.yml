# SPDX-FileCopyrightText: Copyright (c) 2025 Broadsage <opensource@broadsage.com>
#
# SPDX-License-Identifier: Apache-2.0

name: "CodeQL Advanced Security"

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]
  schedule:
    # Run at 06:00 UTC every day (adjust timezone as needed)
    - cron: "0 6 * * *"
  workflow_dispatch:
    inputs:
      queries:
        description: "Query suite to run (security-extended, security-and-quality, or custom)"
        required: false
        default: "security-extended"

env:
  # Fail the workflow if CodeQL analysis fails
  CODEQL_FAIL_ON_ERROR: true

permissions:
  # Required for CodeQL analysis
  security-events: write
  # Required to fetch internal or private CodeQL packs
  packages: read
  # Required for GitHub Advanced Security features
  actions: read
  contents: read

jobs:
  analyze:
    name: "CodeQL Analysis"
    runs-on: ubuntu-latest
    timeout-minutes: 60

    permissions:
      # Required for all workflows
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        # Python-only analysis
        language: ["python"]

    steps:
      # Security hardening
      - name: Harden GitHub Actions Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          disable-sudo: true
          allowed-endpoints: >
            api.github.com:443
            auth.docker.io:443
            production.cloudflare.docker.com:443
            registry-1.docker.io:443
            github.com:443
            objects.githubusercontent.com:443
            uploads.github.com:443

      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          # Fetch full history for better analysis
          fetch-depth: 0

      # Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@db69a5182d331d562e511302ae3c9aafd5fada6c # v3.26.6
        with:
          languages: ${{ matrix.language }}

          # Query suites are configured in the config file
          # Custom configuration file
          config-file: ./.github/codeql/codeql-config.yml

          # Additional packs (optional - enterprise feature)
          # packs: |
          #   codeql/security-queries
          #   codeql/security-extended-queries

          # Debug mode (enable for troubleshooting)
          debug: false

          # Thread count for analysis performance
          threads: 0 # Use all available threads

      # Python setup
      - name: Set up Python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: "3.x"

      # Install Python dependencies (if requirements files exist)
      - name: Install Python dependencies
        run: |
          if [ -f requirements.txt ]; then
            echo "Installing from requirements.txt"
            pip install -r requirements.txt
          fi
          if [ -f requirements-dev.txt ]; then
            echo "Installing from requirements-dev.txt"
            pip install -r requirements-dev.txt
          fi
          if [ -f pyproject.toml ]; then
            echo "Installing from pyproject.toml"
            pip install -e .
          fi
          if [ -f setup.py ]; then
            echo "Installing from setup.py"
            pip install -e .
          fi

      # Perform CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@db69a5182d331d562e511302ae3c9aafd5fada6c # v3.26.6
        with:
          category: "/language:${{ matrix.language }}"
          # Upload results even if there are findings
          upload: true
          # Wait for processing to complete
          wait-for-processing: true

  # Summary job to provide overall status
  summary:
    name: "CodeQL Summary"
    runs-on: ubuntu-latest
    needs: analyze
    if: always()

    permissions:
      security-events: read
      actions: read
      contents: read

    steps:
      - name: Security Analysis Summary
        run: |
          # Create the main summary content
          {
            echo "## 🔍 CodeQL Security Analysis Summary"
            echo ""
            echo "✅ **Analysis completed for configured languages**"
            echo ""
            echo "📊 **Results**: Check the Security tab for detailed findings"
            echo ""
            echo "🔗 **View Results**: [Security Alerts](https://github.com/${{ github.repository }}/security/code-scanning)"
            echo ""
            echo "📅 **Analysis Date**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
            echo ""
            
            # Check if analysis failed and add status
            if [ "${{ needs.analyze.result }}" != "success" ]; then
              echo "⚠️ **Status**: Analysis encountered issues"
              echo ""
              echo "Please review the workflow logs for details."
            else
              echo "✅ **Status**: Analysis completed successfully"
            fi
          } >> "${GITHUB_STEP_SUMMARY}"
